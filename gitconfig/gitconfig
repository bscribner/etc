# enable color when possible
[color]
	ui = auto

# add some short cuts... most of them familiar to those of us coming from
# other VCSes.
[alias]
	ci = commit
	co = checkout
	st = status -sb
	br = branch
	di = diff

        # A handy graph-based log view
        lol = log --abbrev-commit --graph --decorate

        # Fast-forward pull
        ff = pull --ff-only

        # Fetch all branches
        fa = fetch --all

        # Fetch all tags
        ft = fetch --tags

        # Show the type of the object
        type = cat-file -t

        # Pretty print the object
        dump = cat-file -p

	# show difference between the HEAD and the index
	staged = diff --cached

	# show difference between working tree and the index
	unstaged = diff

	# show staged and unstaged changes (what would be committed with "git commit -a")
	both = diff HEAD

	# Show all files that are being ignored
	ignored = ls-files --others -i --exclude-standard

	# Have info show the remote url
	info = config remote.origin.url

	# diffstat output, without the pager
	diffstat = !git --no-pager diff --stat -r

	# Prune all stale remote branches from the local repository
	prune-all = !git remote | xargs -n 1 git remote prune

        # Handy alias to show all relevant tips.  Using this like:
        #     git tips origin/pu ^origin/next | git oneline
        #
        # would show all branches in pu that are not in next.
        # Thanks to Jon Seymour for posting this on the git list.
        tips = "!_() { t=$(git rev-list --no-merges --max-count=1 \"$@\"); if test -n \"$t\"; then echo $t; _ \"$@\" ^$t; fi; }; _"
        oneline = !xargs -L1 git log --decorate --max-count=1 --oneline

[core]
	# make central area for git ignores. copy gitignores and change this to
	#   excludesfile = ~/.gitignores
	# if you need to customize it
	excludesfile = ~/projects/etc/gitconfig/gitignores

[diff]
	# Does rename detection during diff operation
	renames = true
